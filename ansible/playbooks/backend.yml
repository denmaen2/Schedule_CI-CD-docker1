---
- name: update cache
  hosts: backend
  become: yes
  roles:
    - apt-cache
  
- name: AWS_CLI 
  hosts: backend
  become: yes
  roles:
    - role: awscli

- name: Docker 
  hosts: backend
  become: yes
  roles:
    - role: Docker

- name: Configure backend with Docker
  hosts: backend
  become: yes
  vars:
    # Override defaults if needed
    ecr_tag: "{{ lookup('env', 'ecr_image_tag') | default('latest') }}"
    aws_account_id: "{{ lookup('env', 'aws_account_id') }}"
    # Set backend specific variables
    container_name: "backend-container"
    host_port: 8080
    container_port: 8080
  roles:
    - role: backend-configure
    
- name: Monitor
  hosts: monitor
  become: true
  vars:
    # IP variables for monitoring configuration
    frontend_private_ip: "{{ lookup('env', 'FRONTEND_PRIVATE_IP') }}"
    frontend_public_ip: "{{ lookup('env', 'FRONTEND_PUBLIC_IP') }}"
    backend_private_ip: "{{ lookup('env', 'BACKEND_PRIVATE_IP') }}"
    backend_public_ip: "{{ lookup('env', 'BACKEND_PUBLIC_IP') }}"
  roles:
    - role: prometheus_install
      prometheus_version: "2.50.1"
      prometheus_retention_time: "15d"
      prometheus_custom_scrape_configs:
        - job_name: 'backend_cadvisor'
          metrics_path: '/metrics'
          static_configs:
            - targets: ['{{ backend_private_ip }}:9150']
        - job_name: 'backend_node'
          metrics_path: '/metrics'
          static_configs:
            - targets: ['{{ backend_private_ip }}:9100']
    
- name: Install docker on vm
  hosts: backend 
  become: true
  roles:
    - node_exporter_install
    - role: run_container
      vars:
        container_name: cadvisor
        image: gcr.io/cadvisor/cadvisor:latest
        pull_image: true
        restart_policy: always
        ports:
          - "9150:8080"
        env_vars: {}
        volumes:
          - "/:/rootfs:ro"
          - "/var/run:/var/run:ro"
          - "/sys:/sys:ro"
          - "/var/lib/docker/:/var/lib/docker:ro"
        network_mode: bridge
